graph TD
    %% System Entry Points
    A[run_system.py<br/>üöÄ Main Entry] --> B[WorkflowOrchestrator<br/>üéõÔ∏è System Controller]
    
    %% LangChain Orchestration Layer
    B --> C{LangGraph StateGraph<br/>üîÑ Workflow Engine}
    C --> D[workflow_graph.ainvoke<br/>üìä State Management]
    
    %% Workflow Steps (LangChain Managed)
    D --> E1[initialize<br/>‚öôÔ∏è Setup]
    E1 --> E2[discover_trends<br/>üîç Data Discovery]
    E2 --> E3[enrich_data<br/>üìà Data Enhancement]
    E3 --> E4[compute_metrics<br/>üìä Analytics]
    E4 --> E5[semantic_analysis<br/>üß† Content Analysis]
    E5 --> E6[generate_predictions<br/>üîÆ Viral Prediction]
    E6 --> E7[evaluate_results<br/>‚úÖ Validation]
    E7 --> E8[cleanup<br/>üßπ Finalization]
    
    %% Agent Registry (LangChain Agents)
    B --> F[AgentRegistry<br/>ü§ñ Agent Manager]
    F --> G1[IngestionAgent<br/>üì• Data Ingestion]
    F --> G2[AnalyzerAgent<br/>üìä Analysis]
    F --> G3[SemanticAgent<br/>üß† NLP Processing]
    
    %% LangChain Agent Framework
    G1 --> H1[BaseAgent<br/>üèóÔ∏è LangChain Structure]
    G2 --> H1
    G3 --> H1
    
    H1 --> I1[AgentExecutor<br/>‚ö° LangChain Runtime]
    H1 --> I2[ConversationBufferMemory<br/>üíæ Context Management]
    H1 --> I3[LangChain Tools<br/>üõ†Ô∏è @tool decorators]
    
    %% Data Processing Split
    E2 --> J{Data Processing<br/>Pathway}
    J -->|Apify Data| K[Direct Apify SDK<br/>üì± No LangChain]
    J -->|AI Analysis| L[AI Processing<br/>Decision Point]
    
    %% AI System Architecture
    L --> M{AI System<br/>unified_ai_system.py}
    M -->|Primary| N1[Cloud Llama 70B<br/>üå©Ô∏è Direct API]
    M -->|Backup| N2[Local Llama 8B<br/>ü¶ô Direct API]
    M -->|Fallback| N3[Claude Opus 4<br/>ü§ñ Direct API]
    M -->|Emergency| N4[GPT-4o-mini<br/>üîÑ Direct API]
    
    %% LangChain AI Components (Optional Path)
    L --> O[setup_llm_integration.py<br/>üîß LangChain LLMs]
    O --> P1[ChatOpenAI<br/>ü§ñ LangChain Wrapper]
    O --> P2[ChatAnthropic<br/>ü§ñ LangChain Wrapper]
    O --> P3[ChatPromptTemplate<br/>üìù Structured Prompts]
    O --> P4[JsonOutputParser<br/>üìã Output Parsing]
    
    %% Tool System
    I3 --> Q1[monitor_startup_trends<br/>üìà @tool]
    I3 --> Q2[analyze_startup_video<br/>üé¨ @tool]
    
    %% Data Flow Back
    K --> R[Apify Data<br/>üìä Raw TikTok Data]
    N1 --> S[AI Insights<br/>üß† Processed Analysis]
    N2 --> S
    N3 --> S
    N4 --> S
    P1 --> S
    P2 --> S
    
    R --> T[WorkflowState<br/>üóÉÔ∏è Shared State]
    S --> T
    T --> E3
    
    %% State Management
    T --> U[ingested_data<br/>computed_metrics<br/>predictions<br/>alerts]
    
    %% Final Output
    E8 --> V[Terminal Output<br/>üì∫ Results Display]
    E8 --> W[No Files Created<br/>üö´ Memory Only]
    
    %% Styling
    classDef langchain fill:#e1f5fe,stroke:#01579b,stroke-width:2px,color:#000
    classDef directapi fill:#fff3e0,stroke:#e65100,stroke-width:2px,color:#000
    classDef workflow fill:#f3e5f5,stroke:#4a148c,stroke-width:2px,color:#000
    classDef data fill:#e8f5e8,stroke:#1b5e20,stroke-width:2px,color:#000
    
    %% Apply Classes
    class C,D,F,H1,I1,I2,I3,O,P1,P2,P3,P4,Q1,Q2 langchain
    class K,M,N1,N2,N3,N4 directapi
    class E1,E2,E3,E4,E5,E6,E7,E8,U workflow
    class R,S,T,V,W data
    
    %% Legend
    subgraph Legend["üîç Legend"]
        L1[LangChain Components]:::langchain
        L2[Direct API Calls]:::directapi
        L3[Workflow Steps]:::workflow
        L4[Data & Output]:::data
    end 